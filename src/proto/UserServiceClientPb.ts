/**
 * @fileoverview gRPC-Web generated client stub for pb
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.20.3
// source: proto/user.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_user_pb from '../proto/user_pb'; // proto import: "proto/user.proto"
import * as proto_enum_pb from '../proto/enum_pb'; // proto import: "proto/enum.proto"


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorFindAll = new grpcWeb.MethodDescriptor(
    '/pb.UserService/FindAll',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.Empty,
    proto_user_pb.UsersResponse,
    (request: proto_user_pb.Empty) => {
      return request.serializeBinary();
    },
    proto_user_pb.UsersResponse.deserializeBinary
  );

  findAll(
    request: proto_user_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<proto_user_pb.UsersResponse>;

  findAll(
    request: proto_user_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.UsersResponse) => void): grpcWeb.ClientReadableStream<proto_user_pb.UsersResponse>;

  findAll(
    request: proto_user_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.UsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/FindAll',
        request,
        metadata || {},
        this.methodDescriptorFindAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/FindAll',
    request,
    metadata || {},
    this.methodDescriptorFindAll);
  }

  methodDescriptorFindPagination = new grpcWeb.MethodDescriptor(
    '/pb.UserService/FindPagination',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.UserPaginationRequest,
    proto_user_pb.UsersResponse,
    (request: proto_user_pb.UserPaginationRequest) => {
      return request.serializeBinary();
    },
    proto_user_pb.UsersResponse.deserializeBinary
  );

  findPagination(
    request: proto_user_pb.UserPaginationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_user_pb.UsersResponse>;

  findPagination(
    request: proto_user_pb.UserPaginationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.UsersResponse) => void): grpcWeb.ClientReadableStream<proto_user_pb.UsersResponse>;

  findPagination(
    request: proto_user_pb.UserPaginationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.UsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/FindPagination',
        request,
        metadata || {},
        this.methodDescriptorFindPagination,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/FindPagination',
    request,
    metadata || {},
    this.methodDescriptorFindPagination);
  }

  methodDescriptorFindById = new grpcWeb.MethodDescriptor(
    '/pb.UserService/FindById',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.UserFindIdRequest,
    proto_user_pb.UserResponse,
    (request: proto_user_pb.UserFindIdRequest) => {
      return request.serializeBinary();
    },
    proto_user_pb.UserResponse.deserializeBinary
  );

  findById(
    request: proto_user_pb.UserFindIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_user_pb.UserResponse>;

  findById(
    request: proto_user_pb.UserFindIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_user_pb.UserResponse) => void): grpcWeb.ClientReadableStream<proto_user_pb.UserResponse>;

  findById(
    request: proto_user_pb.UserFindIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_user_pb.UserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/FindById',
        request,
        metadata || {},
        this.methodDescriptorFindById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/FindById',
    request,
    metadata || {},
    this.methodDescriptorFindById);
  }

  methodDescriptorCreateCustomer = new grpcWeb.MethodDescriptor(
    '/pb.UserService/CreateCustomer',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.CreateUserCustomerRequest,
    proto_enum_pb.StatusResponse,
    (request: proto_user_pb.CreateUserCustomerRequest) => {
      return request.serializeBinary();
    },
    proto_enum_pb.StatusResponse.deserializeBinary
  );

  createCustomer(
    request: proto_user_pb.CreateUserCustomerRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_enum_pb.StatusResponse>;

  createCustomer(
    request: proto_user_pb.CreateUserCustomerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<proto_enum_pb.StatusResponse>;

  createCustomer(
    request: proto_user_pb.CreateUserCustomerRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/CreateCustomer',
        request,
        metadata || {},
        this.methodDescriptorCreateCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/CreateCustomer',
    request,
    metadata || {},
    this.methodDescriptorCreateCustomer);
  }

  methodDescriptorUpdateCustomer = new grpcWeb.MethodDescriptor(
    '/pb.UserService/UpdateCustomer',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.UpdateUserCustomerRequest,
    proto_enum_pb.StatusResponse,
    (request: proto_user_pb.UpdateUserCustomerRequest) => {
      return request.serializeBinary();
    },
    proto_enum_pb.StatusResponse.deserializeBinary
  );

  updateCustomer(
    request: proto_user_pb.UpdateUserCustomerRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_enum_pb.StatusResponse>;

  updateCustomer(
    request: proto_user_pb.UpdateUserCustomerRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<proto_enum_pb.StatusResponse>;

  updateCustomer(
    request: proto_user_pb.UpdateUserCustomerRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/UpdateCustomer',
        request,
        metadata || {},
        this.methodDescriptorUpdateCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/UpdateCustomer',
    request,
    metadata || {},
    this.methodDescriptorUpdateCustomer);
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/pb.UserService/Create',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.CreateUserRequest,
    proto_enum_pb.StatusResponse,
    (request: proto_user_pb.CreateUserRequest) => {
      return request.serializeBinary();
    },
    proto_enum_pb.StatusResponse.deserializeBinary
  );

  create(
    request: proto_user_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_enum_pb.StatusResponse>;

  create(
    request: proto_user_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<proto_enum_pb.StatusResponse>;

  create(
    request: proto_user_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/pb.UserService/Update',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.UpdateUserRequest,
    proto_enum_pb.StatusResponse,
    (request: proto_user_pb.UpdateUserRequest) => {
      return request.serializeBinary();
    },
    proto_enum_pb.StatusResponse.deserializeBinary
  );

  update(
    request: proto_user_pb.UpdateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_enum_pb.StatusResponse>;

  update(
    request: proto_user_pb.UpdateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<proto_enum_pb.StatusResponse>;

  update(
    request: proto_user_pb.UpdateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/pb.UserService/Delete',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.UserFindIdRequest,
    proto_enum_pb.StatusResponse,
    (request: proto_user_pb.UserFindIdRequest) => {
      return request.serializeBinary();
    },
    proto_enum_pb.StatusResponse.deserializeBinary
  );

  delete(
    request: proto_user_pb.UserFindIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_enum_pb.StatusResponse>;

  delete(
    request: proto_user_pb.UserFindIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<proto_enum_pb.StatusResponse>;

  delete(
    request: proto_user_pb.UserFindIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorUpdateStatus = new grpcWeb.MethodDescriptor(
    '/pb.UserService/UpdateStatus',
    grpcWeb.MethodType.UNARY,
    proto_user_pb.UserStatusRequest,
    proto_enum_pb.StatusResponse,
    (request: proto_user_pb.UserStatusRequest) => {
      return request.serializeBinary();
    },
    proto_enum_pb.StatusResponse.deserializeBinary
  );

  updateStatus(
    request: proto_user_pb.UserStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_enum_pb.StatusResponse>;

  updateStatus(
    request: proto_user_pb.UserStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void): grpcWeb.ClientReadableStream<proto_enum_pb.StatusResponse>;

  updateStatus(
    request: proto_user_pb.UserStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_enum_pb.StatusResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/pb.UserService/UpdateStatus',
        request,
        metadata || {},
        this.methodDescriptorUpdateStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/pb.UserService/UpdateStatus',
    request,
    metadata || {},
    this.methodDescriptorUpdateStatus);
  }

}

